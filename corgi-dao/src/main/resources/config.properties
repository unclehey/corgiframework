# jdbc config
jdbc.master.url = ${jdbc.master.url}
jdbc.master.username = ${jdbc.master.username}
jdbc.master.password = ${jdbc.master.password}

# redis config
redis.master.host = ${redis.master.host}
redis.master.port = 6379

# mongodb config
mongo.master.host = ${mongo.master.host}
mongo.master.port = 27017
mongo.master.dbname = ${mongo.master.dbname}
mongo.master.username = ${mongo.master.username}
mongo.master.password = ${mongo.master.password}

# sms config
aliyun_sms_id = xxxxxxxx
aliyun_sms_secret = xxxxxxxxx

# global token
global_token = Corgi2018

# wechat token
wechat_token = Corgi2018

# mail config
mail_name = service@corgi.com
mail_pwd = xxxxxx
mail_from = Corgi<service@corgi.com>
activate_url = ${user.activate.url}
retrieve_url = ${user.retrieve.url}
mail_host = smtp.corgi.com
mail_port = 465
mail_protocol = smtp
mail_auth = true

# picture save/visit config
# banner
banner_path = ${static.file.path}/banner/
banner_url = ${static.file.url}/banner/
# category
category_path = ${static.file.path}/category/
category_url = ${static.file.url}/category/

# wechat public config begin
# 获取access_token的接口地址
access_token_url = https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET
# 菜单创建地址
menu_create_url = https://api.weixin.qq.com/cgi-bin/menu/create?access_token=ACCESS_TOKEN
# 生成带参数的二维码时获取ticket接口地址
public_tiket_url = https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN
# 生成带参数的二维码接口地址
public_qrcode_url = https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=TICKET
# 长链接转短链接接口地址
public_long2short_url = https://api.weixin.qq.com/cgi-bin/shorturl?access_token=ACCESS_TOKEN
# 获取用户信息接口地址
public_info_url = https://api.weixin.qq.com/cgi-bin/user/info?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN
# 向用户发送信息接口地址
public_send_url = https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=ACCESS_TOKEN
# 发送模板消息接口地址
public_send_template = https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=ACCESS_TOKEN
# 获取jsapi_ticket接口地址
public_jsapi_ticket_url = https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&type=jsapi
# 网页授权获取open_id接口地址
public_auth_openid_url = https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code
# 网页授权
# scope 应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且，即使在未关注的情况下，只要用户授权，也能获取其信息）
# state 长度不能超过128字节
# 替换REDIRECT_URI为跳转链接
public_get_oauth_url = https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect
# 申请退款接口地址
public_refund_url = https://api.mch.weixin.qq.com/secapi/pay/refund
# 查询退款接口地址
public_check_refund_url = https://api.mch.weixin.qq.com/pay/refundquery
# 统一下单接口地址
unified_order_url = https://api.mch.weixin.qq.com/pay/unifiedorder
# wechat public config end

# wechat public pay config begin
# 公众平台用户唯一凭证
public_appid = xxxxxx
# 公众平台用户唯一凭证密钥
public_appsecret = xxxxxx
# 公众平台商户号
public_mch_id = xxxxxx
# 公众平台支付秘钥
public_pay_key = xxxxxx
# 公众平台获取access_token缓存key
public_token_key = xxxxxx
# 公众平台获取jsApiTicket缓存key
public_ticket_key = xxxxxx
# wechat public pay config end
# 接收微信支付异步通知回调地址
wechat_notify_url = ${public.third.url}/callback/wxpay/notify.do

# ali pay config beging
# 支付宝支付
aliPay_appId = xxxxxx
# RSA私钥
aliPay_privateKey = xxxxxx
# 支付宝公钥
ali_publicKey = xxxxxx
# 接收支付宝支付异步通知回调地址
alipay_notify_url = ${public.third.url}/callback/alipay/notify.do
# ali pay config end
